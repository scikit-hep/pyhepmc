name: Wheels

on:
  push:
    tags:
      - '**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

# Reminder
# - name: Extract Branch Name
#   run: echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
# https://dev.to/tomassirio/if-statements-on-github-actions-545d

jobs:
  wheels:
    name: ${{ matrix.py }} ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [auto]
        py: [cp37, cp38, cp39, cp310]
        include:
          - os: macos-latest
            py: cp38
            arch: universal2
          - os: macos-latest
            py: cp39
            arch: universal2
          - os: macos-latest
            py: cp310
            arch: universal2
    env:
      CIBW_BUILD: ${{ matrix.py }}-*
      CIBW_ARCHS_LINUX: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0  # needed by setuptools_scm

      - uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD: ${{ matrix.py }}-*
          CIBW_ARCHS: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  sdist:
    name: source package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - run: python -m pip install --upgrade pip wheel
      - run: python -m pip install --prefer-binary -e .[test]
      - run: python setup.py sdist
      - run: python -m pip uninstall --yes pyhepmc

      - run: python -m pip install dist/pyhepmc-*
      - run: python -m pytest

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload:
    needs: [wheels, sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.ref, '/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{secrets.pypi}}

[build-system]
requires = [
    "setuptools>=46.4",
    "setuptools_scm[toml]>=6.2",
    "cmake>=3.13",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "pyhepmc"
description = "Pythonic interface to the HepMC3 C++ library licensed under LGPL-v3."
maintainers = [
    { name = "Hans Dembinski" },
    { email = "hans.dembinski@gmail.com" }
]
readme = "README.rst"
requires-python = ">=3.8"
license = {text = "BSD 3-Clause License"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Developers"
]
dependencies = ["numpy"]
dynamic = ["version"]

[project.urls]
repository = "https://github.com/scikit-hep/pyhepmc"
documentation = "https://scikit-hep.org/pyhepmc"

[project.optional-dependencies]
test = [
    "pytest",
    "particle",
    "matplotlib"
]
doc = [
    "sphinx",
    "sphinx-rtd-theme",
    "nbsphinx",
    "ipython",
    "ipykernel",
]

[tool.setuptools_scm]

[tool.mypy]
strict = true
no_implicit_optional = false
allow_redefinition = true
ignore_missing_imports = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-config --strict-markers -q -ra --ff"
testpaths = ["tests"]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = [
    "error::DeprecationWarning",
    "error::numpy.VisibleDeprecationWarning",
]

[tool.coverage.run]
relative_files = true
source = ["pyhepmc"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]

[tool.pydocstyle]
convention = "numpy"

[tool.cibuildwheel]
# update skip when numpy wheels become available
skip = ["*-musllinux_*", "cp31?-win32", "cp31?-manylinux_i686"]
test-extras = ["test"]
test-command = "python -m pytest {package}/tests"
test-skip = ["*universal2:arm64"]
# to match numpy, we use manylinux2014 for cp310+
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"

[tool.cibuildwheel.environment]
# this makes sure that we build only on platforms that have a corresponding numpy wheel
PIP_ONLY_BINARY = ":all:"
CIBW = "1"

[[tool.cibuildwheel.overrides]]
# to match numpy, we use manylinux2010 for cp36 to cp39
select = "cp3?-*"
manylinux-x86_64-image = "manylinux2010"
manylinux-i686-image = "manylinux2010"

[build-system]
requires = [
    "setuptools>=46.4",
    "setuptools_scm[toml]>=6.2",
    "cmake>=3.13",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "pyhepmc"
description = "Pythonic interface to the HepMC3 C++ library licensed under LGPL-v3."
maintainers = [{ name = "Hans Dembinski", email = "hans.dembinski@gmail.com" }]
readme = "README.rst"
requires-python = ">=3.9"
license = { text = "BSD 3-Clause License" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Developers",
]
dependencies = ["numpy>=1.21", "packaging", "backports.zstd"]
dynamic = ["version"]

[project.urls]
repository = "https://github.com/scikit-hep/pyhepmc"
documentation = "https://scikit-hep.org/pyhepmc"

[project.optional-dependencies]
test = ["pytest", "particle", "matplotlib"]
doc = ["sphinx", "sphinx-rtd-theme", "nbsphinx", "ipython", "ipykernel"]

[tool.setuptools_scm]

[tool.mypy]
strict = true
no_implicit_optional = false
allow_redefinition = true
ignore_missing_imports = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-config --strict-markers -q -ra --ff"
testpaths = ["tests"]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = [
    "error::PendingDeprecationWarning",
    "error::DeprecationWarning",
    "error::FutureWarning",
]

[tool.coverage.run]
relative_files = true
source = ["pyhepmc"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]

[tool.ruff]
exclude = ["docs/examples/*"]

[tool.ruff.lint]
extend-select = [
    "E",
    "F", # flake8
    "D", # pydocstyle
]
unfixable = [
    "F841", # Removes unused variables
]
extend-ignore = [
    "D212", # multi-line-summary-first-line
]
pydocstyle.convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["B", "D"]
"bench/*.py" = ["D"]
"docs/*.py" = ["D"]
"cmake_ext.py" = ["D"]
"generate_*.py" = ["D"]
"setup*.py" = ["D"]

[tool.cibuildwheel]
build-frontend = "build[uv]"
skip = ["cp39-musllinux_i686"]                    # no numpy wheel
test-extras = ["test"]
test-command = "python -m pytest {package}/tests"
test-skip = ["*universal2:arm64"]
enable = ["cpython-freethreading"]

[tool.cibuildwheel.environment]
# this makes sure that we build only on platforms that have a corresponding numpy wheel
UV_ONLY_BINARY = ":all:"
PIP_ONLY_BINARY = ":all:"

[[tool.cibuildwheel.overrides]]
# to match numpy, we use manylinux2014 for cp310 (and 3.9, since manylinux2010 is dead)
select = "cp3{9,10}-manylinux*"
manylinux-x86_64-image = "manylinux2014"
build-frontend = "build"
